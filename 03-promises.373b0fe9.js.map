{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAQA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GAEFF,EAAQ,uBAAqBH,QAAiBC,OAGhDG,EAAO,sBAAoBJ,QAAeC,SACzCA,OAhBM,CACXQ,OAAQC,SAASC,cAAc,UAC/BC,OAAQF,SAASC,cAAc,QAC/BE,MAAOH,SAASC,cAAc,WAiB3BC,OAAOE,iBAAiB,UAE7B,SAAoBC,GAClBA,EAAGC,iBACH,MACEC,UAAUhB,MAAEA,EAAKiB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAGK,cAEP,IAAIC,EAAYC,OAAOrB,EAAMsB,OAE7B,IAAK,IAAIC,EAAK,EAAGA,EAAKF,OAAOH,EAAOI,OAAQC,GAAM,EAAG,CAGnDzB,EAFcyB,EAAK,EAEIH,GACpBI,MAAKC,IACJC,EAAA9B,GAAS+B,OAAOC,QAAQH,MAEzBI,OAAMC,IACLJ,EAAA9B,GAAS+B,OAAOI,QAAQD,MAE5BV,GAAaC,OAAOJ,EAAKK,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  button: document.querySelector('button'),\n  formEl: document.querySelector('form'),\n  input: document.querySelector('input'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      // Reject\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', onPromisFn);\n\nfunction onPromisFn(ev) {\n  ev.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = ev.currentTarget;\n\n  let promiseMs = Number(delay.value);\n\n  for (let el = 0; el < Number(amount.value); el += 1) {\n    let turnPos = el + 1;\n\n    createPromise(turnPos, promiseMs)\n      .then(res => {\n        Notiflix.Notify.success(res);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n    promiseMs += Number(step.value);\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","button","document","querySelector","formEl","input","addEventListener","ev","preventDefault","elements","step","amount","currentTarget","promiseMs","Number","value","el","then","res","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.373b0fe9.js.map"}